name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir ./sonar
          mkdir ./sonar/scanner
          dotnet nuget update source moa-platform-backend -u az -p "${{ secrets.AZURE_DEVOPS_TOKEN }}" --configfile "NuGet.config" --store-password-in-clear-text
          dotnet tool install dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Cache Coverlet
        id: cache-coverlet
        uses: actions/cache@v3
        with:
          path: ./.coverlet
          key: ${{ runner.os }}-coverlet
          restore-keys: ${{ runner.os }}-coverlet
      - name: Install Coverlet
        if: steps.cache-coverlet.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir ./.coverlet
          dotnet tool install coverlet.console --tool-path ./.coverlet
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          AZ_TOKEN: ${{ secrets.AZURE_DEVOPS_TOKEN }}
        shell: bash
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin \
            /k:"Pure-Farming_DataSourceAgent" \
            /o:"pure-farming" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths=coverage.xml
          dotnet nuget update source moa-platform-backend \
            -u az -p "${{ secrets.AZURE_DEVOPS_TOKEN }}" \
            --configfile "NuGet.config" \
            --store-password-in-clear-text
          dotnet build pure-farming-ds.sln
          ./.coverlet/coverlet ./pfDataSource.Test/bin/Debug/net7.0/pfDataSource.Test.dll \
            --target "dotnet" \
            --targetargs "test ./pure-farming-ds.sln --no-build" \
            -f=opencover \
            -o="coverage.xml"
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
