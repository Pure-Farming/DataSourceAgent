@page "/configure"
@implements IAsyncDisposable
@inject IDataSourceConfigurationService DataSourceConfigurationService
@inject IConfigurationService ConfigurationService
@inject IJSRuntime JS

<PageTitle>Pure Farming .: Configuration</PageTitle>

<div class="container">
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="toastSaveFailed" class="toast align-items-center text-bg-danger border-0 position-relative top-0 end-0" role="alert" aria-live="polite" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    Failed to Save Configuration
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
        <div id="toastSaveSuccess" class="toast align-items-center text-bg-success border-0 position-relative top-0 end-0" role="alert" aria-live="polite" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    Successfully Saved Configuration!
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>
    <EditForm Model="@configuration" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col">
                <h2>Configuration</h2>
            </div>
            <div class="col d-md-flex justify-content-md-end">
                <button class="btn btn-outline-primary align-right" type="submit">Save</button>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <label for="dataSourceName" class="form-label">Name</label>
                <InputText type="text" data-val="true" class="form-control" id="dataSourceName" aria-describedby="dataSourceNameHelp" @bind-Value="configuration.Name" />
                <div id="dataSourceNameHelp" class="form-text">The name of the Pure Farming Data source, e.g. farm-metrics</div>

                <ValidationMessage For="@(() => configuration.Name)" />


            </div>
            <div class="col">
                <label for="dataSourceFullName" class="form-label">Full Name</label>
                <div class="input-group">
                    <label class="input-group-text">com.purefarming.data-source.</label>
                    <input class="form-control" id="dataSourceFullName" aria-describedby="dataSourceFullNameHelp" @bind="configuration.FullName" />
                </div>
                <div id="dataSourceFullNameHelp" class="form-text">The full, reverse DNS name of the Pure Farming Data source, e.g. com.purefarming.data-source.farm-metrics</div>
            </div>
        </div>
        <div class="row"><div class="col">&nbsp;</div></div>
        <div class="row">
            <div class="col">
                <h5>File Source Configuration</h5>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <label for="filePath" class="form-label">File Path</label>
                <input type="text" class="form-control" id="filePath" aria-describedby="filePathHelp" @bind="fileConfiguration.Path" />
                <div id="filePathHelp" class="form-text">The path to where files will be retrieved from, e.g. /etc/pure-farming</div>
            </div>
            <div class="col">
                <label for="fileType" class="form-label">File Type</label>
                <select id="fileType" class="form-select" aria-label="File Type" @bind="fileConfiguration.FileType">
                    <option selected>Select the File Type</option>
                    <option value=".csv">CSV</option>
                    <option value=".tsv">TSV</option>
                </select>
                <div id="fileTypeHelp" class="form-text">The name of the Pure Farming Data source, e.g. farm-metrics</div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" @bind="watchDirectory" id="watchDirectory" />
                    <label class="form-check-label" for="watchDirectory">Watch Directory?</label>
                </div>
                <div class="form-text">Whether or not to watch the provided directory for changes.</div>
            </div>
            @if (watchDirectory)
            {

                <div class="col">
                    <label for="submissionDelay" class="form-label">Submission Delay <small class="text-body-secondary">(Minutes)</small></label>
                    <select id="submissionDelay" class="form-select" aria-label="Submission Delay" @bind="fileConfiguration.SubmissionDelay" disabled="@(watchDirectory == false)">
                        <option value="0">No-Delay</option>
                        <option value="60">1 Minute</option>
                        <option value="120">2 Minutes</option>
                        <option value="180">3 Minutes</option>
                        <option value="240">4 Minutes</option>
                        <option value="300">5 Minutes</option>
                    </select>
                    <div id="submissionDelayHelp" class="form-text">How long to delay a file being sent, from when the change is detected on disk.</div>
                </div>
            }
            else
            {
                <div class="col">
                    <label for="submissionDelay" class="form-label">Polling Expression <small class="text-body-secondary">(CRON)</small></label>
                    <input class="form-control" type="text" @bind="fileConfiguration.CronExpression" />
                    <div id="submissionDelayHelp" class="form-text">How often to check the specified directory for new files.</div>
                </div>
            }
        </div>
    </EditForm>
</div>

