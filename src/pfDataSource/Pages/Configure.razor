@page "/configure"
@implements IAsyncDisposable
@inject IDataSourceConfigurationService DataSourceConfigurationService
@inject IConfigurationService ConfigurationService
@inject IJSRuntime JS

<PageTitle>Pure Farming .: Configuration</PageTitle>

<div class="container">
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="toastSaveFailed" class="toast align-items-center text-bg-danger border-0 position-relative top-0 end-0" role="alert" aria-live="polite" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    Failed to Save Configuration
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
        <div id="toastSaveSuccess" class="toast align-items-center text-bg-success border-0 position-relative top-0 end-0" role="alert" aria-live="polite" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    Successfully Saved Configuration!
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>
    <EditForm Model="@configuration" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row">
            <div class="col">
                <h2>Configuration</h2>
            </div>
            <div class="col d-md-flex justify-content-md-end">
                <button class="btn btn-outline-primary align-right" type="submit">Save</button>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <label for="dataSourceName" class="form-label">Name</label>
                <InputText type="text" data-val="true" class="form-control" id="dataSourceName" aria-describedby="dataSourceNameHelp" @bind-Value="configuration.Name" />
                <div id="dataSourceNameHelp" class="form-text">The name of the Pure Farming Data source, e.g. farm-metrics</div>

                <ValidationMessage For="@(() => configuration.Name)" />


            </div>
            <div class="col">
                <label for="dataSourceFullName" class="form-label">Full Name</label>
                <div class="input-group">
                    <label class="input-group-text">com.purefarming.data-source.</label>
                    <InputText class="form-control" id="dataSourceFullName" aria-describedby="dataSourceFullNameHelp" @bind-Value="configuration.FullName" />
                </div>
                <div id="dataSourceFullNameHelp" class="form-text">The full, reverse DNS name of the Pure Farming Data source, e.g. com.purefarming.data-source.farm-metrics</div>
                <ValidationMessage For="@(() => configuration.FullName)" />
            </div>
        </div>
        <div class="row"><div class="col">&nbsp;</div></div>
        <div class="row">
            <div class="col">
                <label for="displayType" class="form-label">Data source method</label>
                <select id="displayType" class="form-select" aria-label="Display Type" @bind="configuration.DisplayType">
                    <option value="FileConfiguration">File based solution</option>
                    <option value="DatabaseConfiguration">Database solution</option>
                </select>
                <div id="displayTypeHelp" class="form-text">Select how you want to gather source data</div>
            </div>
            <div class="col">&nbsp;</div>
        </div>
        <div class="row"><div class="col">&nbsp;</div></div>
        @if (configuration.DisplayType == "FileConfiguration")
        {

            <div class="row">
                <div class="col">
                    <h5>File Source Configuration</h5>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <label for="filePath" class="form-label">File Path</label>
                    <InputText data-val="true" type="text" class="form-control" id="filePath" aria-describedby="filePathHelp" @bind-Value="fileConfiguration.Path" />
                    <div id="filePathHelp" class="form-text">The path to where files will be retrieved from, e.g. /etc/pure-farming</div>
                
                    <ValidationMessage For="@(() => fileConfiguration.Path)" />
                
                </div>
                <div class="col">
                    <label for="fileType" class="form-label">File Type</label>
                    <InputSelect  id="fileType" class="form-select" aria-label="File Type" @bind-Value="fileConfiguration.FileType">
                        <option selected>Select the File Type</option>
                        <option value=".csv">CSV</option>
                        <option value=".tsv">TSV</option>
                    </InputSelect>
                    <div id="fileTypeHelp" class="form-text">The name of the Pure Farming Data source, e.g. farm-metrics</div>
                </div>
            </div>
    
            <div class="row">
                <div class="col">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" @bind="watchDirectory" id="watchDirectory" />
                        <label class="form-check-label" for="watchDirectory">Watch Directory?</label>
                    </div>
                    <div class="form-text">Whether or not to watch the provided directory for changes.</div>
                </div>
                @if (watchDirectory)
                {

                    <div class="col">
                        <label for="submissionDelay" class="form-label">Submission Delay <small class="text-body-secondary">(Minutes)</small></label>
                        <select id="submissionDelay" class="form-select" aria-label="Submission Delay" @bind="fileConfiguration.SubmissionDelay" disabled="@(watchDirectory == false)">
                            <option value="0">No-Delay</option>
                            <option value="60">1 Minute</option>
                            <option value="120">2 Minutes</option>
                            <option value="180">3 Minutes</option>
                            <option value="240">4 Minutes</option>
                            <option value="300">5 Minutes</option>
                        </select>
                        <div id="submissionDelayHelp" class="form-text">How long to delay a file being sent, from when the change is detected on disk.</div>
                    </div>
                }
                else
                {
                    <div class="col">
                        <label for="submissionDelay" class="form-label">Polling Expression <small class="text-body-secondary">(CRON)</small></label>
                        <InputText data-val="true" class="form-control" type="text" @bind-Value="fileConfiguration.CronExpression" />
                        <div id="submissionDelayHelp" class="form-text">How often to check the specified directory for new files.</div>
                        <ValidationMessage For="@(() => fileConfiguration.CronExpression)" />
                 
                    </div>
                }
            </div>
        }
        else
        {
            <div class="row">
                <div class="col">
                    <h5>Database Configuration</h5>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <label for="databaseTechnology" class="form-label">Database Technology</label>
                    <InputSelect id="databaseTechnology" class="form-select" aria-label="File Type" @bind-Value="databaseConfiguration.ServerTechnology">
                        <option selected>Select the Database Type</option>
                        <option value="@Common.Configuration.DatabaseConfiguration.Postgres">PostgreSQL</option>
                        <option value="@Common.Configuration.DatabaseConfiguration.SqlServer">Microsoft SQL Server</option>
                        <option value="@Common.Configuration.DatabaseConfiguration.MySql">MySQL / MariaDB</option>
                    </InputSelect>
                    <div id="databaseTechnologyHelp" class="form-text">The type of database to connect to.</div>
                </div>
                <div class="col">
                    <label for="connectionString" class="form-label">Connection String</label>
                    <InputText data-val="true" type="text" class="form-control" id="connectionString" aria-describedby="filePathHelp" @bind-Value="databaseConfiguration.ConnectionString" />
                    <div id="connectionStringHelp" class="form-text">The connection string to use when connecting to the database.
                        <span><i>Example: Server=127.0.0.1;Port=5432;Database=myDataBase;User Id=myUsername;Password=myPassword;</i></span>
                    </div>
                    <ValidationMessage For="@(() => databaseConfiguration.ConnectionString)" />
                </div>
            </div>
            <div class="row">
                <div class="col">&nbsp;</div>
            </div>
            <div class="row">
                <div class="col">
                    <h6>Queries</h6>
                </div>
            </div>
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">CRON-Tab</th>
                        <th scope="col">Query</th>
                        <th scope="col" class="d-md-flex justify-content-md-end">
                            <button type="button" class="btn btn-outline-primary align-right" @onclick="OnAddQuery">
                                <span class="oi oi-plus"></span> Add
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody class="table-group-divider">

                    @foreach (var q in databaseConfiguration.Queries)
                    {

                    <tr>
                            <td class="align-middle">@q.Name</td>
                            <td class="align-middle font-monospace">@q.CronExpression</td>
                            <td class="align-middle font-monospace text-truncate">@q.Query</td>
                        <td class="d-md-flex justify-content-md-end">
                            <button type="button"
                                    class="btn btn-outline-secondary btn-sm"
                                @onclick="@(() => OnEditClick(q))">
                                <span class="oi oi-pencil"></span>
                            </button>
                            &nbsp;
                                <button type="button" class="btn btn-outline-danger btn-sm" @onclick="@(() => OnDeleteClick(q))">
                                <span class="oi oi-trash"></span>
                            </button>
                        </td>
                    </tr>

                    }

                </tbody>
            </table>
        }

    </EditForm>


    <div class="modal" tabindex="-1" id="addNewModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5>New Query</h5>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col">
                            <label for="queryName" class="form-label">Name</label>
                            <input type="text" class="form-control" id="queryName" @bind="tempQuery.Name" />
                            <div class="invalid-feedback">Name is required</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <label for="cronExpression" class="form-label">CRON Expression</label>
                            <input type="text" class="form-control" id="cronExpression" @bind="tempQuery.CronExpression" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <label for="queryValue" class="form-label">Query</label>
                            <Blace.Components.Editor @ref="Edit" T="Data.SqlEditorFile" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="OnDismissAdd">Cancel</button>
                    <button type="button" class="btn btn-primary" @onclick="OnSaveAdd">Save</button>
                </div>
            </div>
        </div>
    </div>

</div>

